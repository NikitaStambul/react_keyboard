{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","undefined","handleDocumentClick","event","setState","key","document","addEventListener","this","removeEventListener","keyName","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,gBAAYC,GAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZJ,WAAYG,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAmBE,WACE,IAAoBQ,EAAYF,KAAKT,MAA7BC,WAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEID,EAAO,mCACyBA,EADzB,KAEH,kCA5BhB,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.419697a7.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string | undefined,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: undefined,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    const { pressedKey: keyName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            keyName\n              ? `The last pressed key is [${keyName}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}